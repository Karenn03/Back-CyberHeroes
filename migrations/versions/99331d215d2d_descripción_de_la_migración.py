"""Descripción de la migración

Revision ID: 99331d215d2d
Revises: 
Create Date: 2024-11-19 11:02:12.118362

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '99331d215d2d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    op.execute('DROP TABLE IF EXISTS categories CASCADE')
    op.execute('DROP TABLE IF EXISTS game_has_level CASCADE')
    op.execute('DROP TABLE IF EXISTS game_has_monsters CASCADE')
    op.execute('DROP TABLE IF EXISTS users CASCADE')
    op.execute('DROP TABLE IF EXISTS answers CASCADE')
    op.execute('DROP TABLE IF EXISTS questions CASCADE')
    op.execute('DROP TABLE IF EXISTS level CASCADE')
    op.execute('DROP TABLE IF EXISTS game CASCADE')
    op.execute('DROP TABLE IF EXISTS monsters CASCADE')

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('monsters',
    sa.Column('idmonsters', sa.INTEGER(), server_default=sa.text("nextval('monsters_idmonsters_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('idlevel', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['idlevel'], ['level.idlevel'], name='fk_monsters_level1'),
    sa.PrimaryKeyConstraint('idmonsters', name='monsters_pkey'),
    sa.UniqueConstraint('idmonsters', 'idlevel', name='unique_idmonsters_idlevel'),
    postgresql_ignore_search_path=False
    )
    op.create_table('game',
    sa.Column('idgame', sa.INTEGER(), server_default=sa.text("nextval('game_idgame_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('iduser', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('startdate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('enddate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('finalscore', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['iduser'], ['users.iduser'], name='fk_game_level1'),
    sa.PrimaryKeyConstraint('idgame', name='game_pkey'),
    sa.UniqueConstraint('idgame', 'iduser', name='unique_idgame_iduser'),
    postgresql_ignore_search_path=False
    )
    op.create_table('level',
    sa.Column('idlevel', sa.INTEGER(), server_default=sa.text("nextval('level_idlevel_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('difficulty', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('idlevel', name='level_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('questions',
    sa.Column('idquestion', sa.INTEGER(), server_default=sa.text("nextval('questions_idquestion_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('idcategory', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['idcategory'], ['categories.idcategory'], name='fk_questions_category1'),
    sa.PrimaryKeyConstraint('idquestion', name='questions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('answers',
    sa.Column('idanswer', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('idquestion', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('answer', sa.VARCHAR(length=170), autoincrement=False, nullable=False),
    sa.Column('iscorrect', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['idquestion'], ['questions.idquestion'], name='fk_answers_questions'),
    sa.PrimaryKeyConstraint('idanswer', name='answers_pkey')
    )
    op.create_table('users',
    sa.Column('iduser', sa.INTEGER(), server_default=sa.text("nextval('users_iduser_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('idcard', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('names', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('surnames', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=75), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('iduser', name='users_pkey'),
    sa.UniqueConstraint('idcard', name='users_idcard_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('game_has_monsters',
    sa.Column('idgamehasmonsters', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('idgame', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('iduser', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('idmonsters', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('idlevel', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['idgame', 'iduser'], ['game.idgame', 'game.iduser'], name='fk_game_has_monsters_game1'),
    sa.ForeignKeyConstraint(['idmonsters', 'idlevel'], ['monsters.idmonsters', 'monsters.idlevel'], name='fk_game_has_monsters_monsters1'),
    sa.PrimaryKeyConstraint('idgamehasmonsters', name='game_has_monsters_pkey')
    )
    op.create_table('game_has_level',
    sa.Column('idgamehaslevel', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('idgame', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('iduser', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('idlevel', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['idgame', 'iduser'], ['game.idgame', 'game.iduser'], name='fk_game_has_level_game1'),
    sa.ForeignKeyConstraint(['idlevel'], ['level.idlevel'], name='fk_game_has_level_level1'),
    sa.PrimaryKeyConstraint('idgamehaslevel', name='game_has_level_pkey')
    )
    op.create_table('categories',
    sa.Column('idcategory', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('idmonsters', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=65), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['idmonsters'], ['monsters.idmonsters'], name='fk_category_monsters1'),
    sa.PrimaryKeyConstraint('idcategory', name='categories_pkey')
    )
    # ### end Alembic commands ###
